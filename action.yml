name: üìÅ Setup C++ Plus Repository Utilities (Rubisco).

description: Setup Rubisco and add the command-line tools to the PATH.
author: The C++ Plus Project

inputs:
  host:
    description: Cross-compile to build programs to run on the host system.
    required: true

outputs:
  tag:
    description: The tag of the repository for release build, if we are not in a release build, the tag will set to the current branch name.
    value: ${{ steps.info.outputs.tag }}
  reponame:
    description: The name of the repository.
    value: ${{ steps.info.outputs.reponame }}
  pkgname:
    description: The name of the package.
    value: ${{ steps.info.outputs.pkgname }}
  srcdir:
    description: Source directory of the repository.
    value: ${{ steps.info.outputs.srcdir }}
  host:
    description: Cross-compile to build programs to run on the host system.
    value: ${{ inputs.host }}

runs:
  using: composite
  steps:
    # Setup other utilities: curl, wget.
    - name: üìÅ Setup other utilities. (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install curl wget -y
      shell: pwsh

    - name: üìÅ Setup other utilities. (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install curl wget --yes
      shell: pwsh

    - name: üìÅ Setup other utilities. (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install curl wget
      shell: pwsh

    # Setup Python.
    - name: üìÅ Setup Python.
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    # Setup original C/C++ toolchain: llvm, clang, cmake, ninja.
    - name: üìÅ Setup C/C++ toolchain. (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install llvm clang cmake ninja-build -y
      shell: pwsh

    - name: üìÅ Setup C/C++ toolchain. (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install llvm ninja cmake --yes
      shell: pwsh

    - name: üìÅ Setup C/C++ toolchain. (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install llvm ninja cmake
      shell: pwsh

    - name: üß≥ Setup MSVC. (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v2

    - name: üß≥ Setup XCode. (macOS)
      if: runner.os == 'macOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    # Get repository infomation.
    - name: üè∑Ô∏è Get repository infomation.
      id: info
      run: |
        $tag="$env:GITHUB_REF_NAME"
        if (-not $tag) {
          $tag=$(git rev-parse --abbrev-ref HEAD)
        }
        $reponame=$env:GITHUB_REPOSITORY
        try {
          $reponame=$reponame.Split("/").Get(1)
        }
        catch {
          Write-Host "Invalid repository name: '$reponame'." -ForegroundColor Red
        }
        Write-Output "tag=$tag" >> $env:GITHUB_OUTPUT
        Write-Output "reponame=$reponame" >> $env:GITHUB_OUTPUT
        Write-Output "pkgname=$reponame-$tag" >> $env:GITHUB_OUTPUT
        Write-Output "srcdir=$PWD" >> $env:GITHUB_OUTPUT
      shell: pwsh

    # Setup Rubisco.
    - name: üìÅ Setup Rubisco.
      run: |
        Set-Location "$env:GITHUB_ACTION_PATH"
        pip install -r requirements.txt -r requirements-dev.txt
        python -m rubisco build
        pip install --upgrade pip
        pip install dist/*.whl
      shell: pwsh
