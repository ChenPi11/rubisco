name: 🧪 Run tests

on: [pull_request, workflow_dispatch, release]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: ⬇️ Check out the repository
        uses: actions/checkout@v4

      - name: 📁 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📁 Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: 📁 Collect dependencies
        run: |
          uv pip install --system . ".[dev]"

      - name: 🧪 Run test
        run: |
          uv run python -m rubisco test

  test-freebsd:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python-version: 311, command: python3.11 }
          - { python-version: 312, command: python3.12 }

    steps:
      - name: 🧪 Run test
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          mem: 4096
          copyback: false
          prepare: |
            pkg install -y git curl gcc gmake bash uv python${{ matrix.python-version }} py${{ matrix.python-version }}-sqlite3
            git clone https://github.com/${{ github.repository }} /root/rubisco --depth 1
            cd /root/rubisco
            uv pip install --python ${{ matrix.command }} --system . ".[dev]"
          run: |
            cd /root/rubisco
            uv run ${{ matrix.command }} -m rubisco test

  test-openbsd:
    runs-on: ubuntu-latest

    steps:
      - name: 🧪 Run test
        uses: vmactions/openbsd-vm@v1
        with:
          usesh: true
          mem: 4096
          copyback: false
          prepare: |
            pkg_add git curl gcc gmake bash python py3-pip
            git clone https://github.com/${{ github.repository }} /root/rubisco --depth 1
            cd /root/rubisco
            pip3 install --break-system-packages . ".[dev]"
          run: |
            cd /root/rubisco
            python3 -m rubisco test

  test-netbsd:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["311", "312", "313"]

    steps:
      - name: 🧪 Run test
        uses: vmactions/netbsd-vm@v1
        with:
          usesh: true
          mem: 4096
          copyback: false
          prepare: |
            export PKG_PATH="https://cdn.NetBSD.org/pub/pkgsrc/packages/NetBSD/$(uname -m)/$(uname -r|cut -d_ -f1)/All/"
            /usr/sbin/pkg_add pkgin
            /usr/pkg/bin/pkgin update
            yes | /usr/pkg/bin/pkgin install git curl gcc gmake bash uv python${{ matrix.python-version }}
            /usr/pkg/bin/git clone https://github.com/${{ github.repository }} /root/rubisco --depth 1
            cd /root/rubisco
            /usr/pkg/bin/uv pip install --system . ".[dev]"
          run: |
            cd /root/rubisco
            /usr/pkg/bin/uv run python -m rubisco test

  test-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: ⬇️ Check out the repository
        uses: actions/checkout@v4

      - name: 📁 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📁 Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: 📁 Collect dependencies
        run: |
          uv pip install --system . ".[dev]"

      - name: 🧪 Run test
        run: |
          uv run python -m rubisco test

  test-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: ⬇️ Check out the repository
        uses: actions/checkout@v4

      - name: 📁 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📁 Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: 📁 Collect dependencies
        run: |
          uv pip install --system . ".[dev]"

      - name: 🧪 Run test
        run: |
          uv run python -m rubisco test

  test-msys2-pure:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: ⬇️ Check out the repository
        uses: actions/checkout@v4

      - name: 📁 Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          install: gcc cmake make python python-pip

      - name: 📁 Collect dependencies
        run: |
          pip3 install --break-system-packages . ".[dev]"

      - name: 🧪 Run test
        run: |
          python -m rubisco test

  test-msys2:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: ucrt64, env: ucrt-x86_64 }
          - { sys: clang64, env: clang-x86_64 }

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: ⬇️ Check out the repository
        uses: actions/checkout@v4

      - name: 📁 Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          install: |
            mingw-w64-${{matrix.env}}-uv
            mingw-w64-${{matrix.env}}-python

      - name: 📁 Collect dependencies
        run: |
          uv pip install --system . ".[dev]"

      - name: 🧪 Run test
        run: |
          uv run python -m rubisco test
